@page "/ShowCheckList"
@using BlazorTestProject.Repositories
@using BlazorTestProject.Entities
@using CheckListLibrary.Interfaces
@inject IGenericRepository<Entry> EntryRepository
@inject IGenericRepository<CheckList> CheckListRepository

<h2>CheckList</h2>
@foreach (CheckList checkList in CheckLists)
{
    <h3>@checkList.CheckListName</h3>
    <table>
        <thead>
        <th>Description</th>
        <th>Status</th>
        </thead>
        @foreach (Entry entry in checkList.Entries)
            {
                <tr>
                    <td>@entry.EntryText</td>
                    <td>@(entry.IsDone ? " Done" : " In progress")</td>
                    <td @onclick="() => DeleteEntry(entry.Id)">
                        <button>Entfernen</button>
                    </td>
                </tr>
            }
            <AddChecklistEntry EntryAdded="() => this.StateHasChanged()" CheckListId="@checkList.Id"></AddChecklistEntry>
    </table>
}

<!-- <AddChecklistEntry EntryAdded="() => this.StateHasChanged()"></AddChecklistEntry> -->

@code {
    
    public List<CheckList> CheckLists { get; set; }

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        var checkListToPass =  await CheckListRepository.GetAll("Entries").ConfigureAwait(false);
        CheckLists = checkListToPass.ToList();
    }

    void DeleteEntry(Guid index)
    {
        Entry entry = EntryRepository.Find(e => e.Id.ToString().Equals(index.ToString())).FirstOrDefault();
        EntryRepository.Remove(entry);
    }
}